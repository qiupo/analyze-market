name: Build Cross-Platform Packages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install ta-lib
    
    - name: Install Python dependencies (Windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        python -m pip install --upgrade pip
        pip install numpy pandas streamlit plotly akshare
        pip install TA-Lib
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Install Python dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        python -m pip install --upgrade pip
        pip install numpy pandas streamlit plotly akshare
        pip install TA-Lib
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with PyInstaller (Windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: pyinstaller --onefile --console --name=BandMasterPro --distpath=dist --workpath=build --specpath=. --clean --add-data=src;src --hidden-import=streamlit --hidden-import=akshare --hidden-import=pandas --hidden-import=numpy --hidden-import=plotly --hidden-import=talib main.py
    
    - name: Build with PyInstaller (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: pyinstaller --onefile --console --name=BandMasterPro --distpath=dist --workpath=build --specpath=. --clean --add-data=src:src --hidden-import=streamlit --hidden-import=akshare --hidden-import=pandas --hidden-import=numpy --hidden-import=plotly --hidden-import=talib main.py
    
    - name: Create Windows launcher script
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        if not exist dist mkdir dist
        echo @echo off > dist\启动应用.bat
        echo title BandMaster Pro - 智策波段交易助手 >> dist\启动应用.bat
        echo . >> dist\启动应用.bat
        echo echo ======================================== >> dist\启动应用.bat
        echo echo   BandMaster Pro - 智策波段交易助手 >> dist\启动应用.bat
        echo echo ======================================== >> dist\启动应用.bat
        echo . >> dist\启动应用.bat
        echo echo 正在启动应用... >> dist\启动应用.bat
        echo . >> dist\启动应用.bat
        echo if exist "BandMasterPro.exe" ( >> dist\启动应用.bat
        echo     BandMasterPro.exe >> dist\启动应用.bat
        echo ) else ( >> dist\启动应用.bat
        echo     echo 错误: 找不到 BandMasterPro.exe >> dist\启动应用.bat
        echo     echo 请确保文件在同一目录下 >> dist\启动应用.bat
        echo     pause >> dist\启动应用.bat
        echo ) >> dist\启动应用.bat
    
    - name: Create Linux/macOS launcher script
      if: matrix.os != 'windows-latest'
      run: |
        mkdir -p dist
        echo '#!/bin/bash' > dist/启动应用.sh
        echo 'echo "========================================"' >> dist/启动应用.sh
        echo 'echo "  BandMaster Pro - 智策波段交易助手"' >> dist/启动应用.sh
        echo 'echo "========================================"' >> dist/启动应用.sh
        echo 'echo' >> dist/启动应用.sh
        echo 'echo "正在启动应用..."' >> dist/启动应用.sh
        echo 'echo' >> dist/启动应用.sh
        echo 'if [ -f "./BandMasterPro" ]; then' >> dist/启动应用.sh
        echo '    chmod +x ./BandMasterPro' >> dist/启动应用.sh
        echo '    ./BandMasterPro' >> dist/启动应用.sh
        echo 'else' >> dist/启动应用.sh
        echo '    echo "错误: 找不到 BandMasterPro"' >> dist/启动应用.sh
        echo '    echo "请确保文件在同一目录下"' >> dist/启动应用.sh
        echo '    read -p "按回车键退出..."' >> dist/启动应用.sh
        echo 'fi' >> dist/启动应用.sh
        chmod +x dist/启动应用.sh
    
    - name: Create Windows README
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        echo # BandMaster Pro - 智策波段交易助手 (Windows版本) > dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo ## 📦 打包版本说明 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo 这是 BandMaster Pro 的独立打包版本，无需安装 Python 环境即可直接运行。 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo ## 🚀 快速启动 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo ### Windows 系统 >> dist\README-Windows.md
        echo 1. 双击 `启动应用.bat` 或直接运行 `BandMasterPro.exe` >> dist\README-Windows.md
        echo 2. 等待应用启动（首次启动可能需要10-30秒） >> dist\README-Windows.md
        echo 3. 浏览器会自动打开应用界面 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo ## 📊 功能特色 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo - **智能波段识别**: 多周期协同分析 >> dist\README-Windows.md
        echo - **六维信号验证**: 趋势、动量、量能、资金、形态、环境 >> dist\README-Windows.md
        echo - **精准买卖点**: 基于量化模型的决策矩阵 >> dist\README-Windows.md
        echo - **动态仓位管理**: 底仓+加仓+补仓+T+0策略 >> dist\README-Windows.md
        echo - **完整风控体系**: 止盈、止损、时间、紧急四重保护 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo ## 🔧 使用说明 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo 1. 在左侧输入6位股票代码（如：000001） >> dist\README-Windows.md
        echo 2. 选择分析周期 >> dist\README-Windows.md
        echo 3. 可选择设置持仓信息进行个性化分析 >> dist\README-Windows.md
        echo 4. 点击"开始分析"查看完整报告 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo ## ⚠️ 注意事项 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo 1. **首次启动**: 可能需要较长时间，请耐心等待 >> dist\README-Windows.md
        echo 2. **网络连接**: 需要网络连接获取股票数据 >> dist\README-Windows.md
        echo 3. **防火墙**: 部分防火墙可能阻止应用启动，请添加信任 >> dist\README-Windows.md
        echo 4. **端口占用**: 如果8501端口被占用，应用会自动寻找其他可用端口 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo ## 🛠️ 故障排除 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo ### 启动失败 >> dist\README-Windows.md
        echo - 检查是否有足够的磁盘空间（至少100MB） >> dist\README-Windows.md
        echo - 尝试以管理员权限运行 >> dist\README-Windows.md
        echo - 临时关闭杀毒软件 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo ### 浏览器未打开 >> dist\README-Windows.md
        echo - 手动打开浏览器访问控制台显示的地址 >> dist\README-Windows.md
        echo - 通常为: http://localhost:8501 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo ### 数据获取失败 >> dist\README-Windows.md
        echo - 检查网络连接 >> dist\README-Windows.md
        echo - 确认股票代码格式正确（6位数字） >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo ## 📞 技术支持 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo 如遇问题请检查： >> dist\README-Windows.md
        echo 1. 系统兼容性 >> dist\README-Windows.md
        echo 2. 网络连接状态 >> dist\README-Windows.md
        echo 3. 防火墙设置 >> dist\README-Windows.md
        echo 4. 磁盘空间 >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo --- >> dist\README-Windows.md
        echo. >> dist\README-Windows.md
        echo **免责声明**: 本工具仅供学习研究使用，不构成投资建议。投资有风险，决策需谨慎。 >> dist\README-Windows.md
    
    - name: Create macOS README
      if: matrix.os == 'macos-latest'
      shell: bash
      run: |
        echo "# BandMaster Pro - 智策波段交易助手 (macOS版本)" > dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "## 📦 打包版本说明" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "这是 BandMaster Pro 的独立打包版本，无需安装 Python 环境即可直接运行。" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "## 🚀 快速启动" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "### macOS 系统" >> dist/README-macOS.md
        echo "1. 双击 \`./启动应用.sh\` 或直接运行 \`BandMasterPro\`" >> dist/README-macOS.md
        echo "2. 等待应用启动（首次启动可能需要10-30秒）" >> dist/README-macOS.md
        echo "3. 浏览器会自动打开应用界面" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "## 📊 功能特色" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "- **智能波段识别**: 多周期协同分析" >> dist/README-macOS.md
        echo "- **六维信号验证**: 趋势、动量、量能、资金、形态、环境" >> dist/README-macOS.md
        echo "- **精准买卖点**: 基于量化模型的决策矩阵" >> dist/README-macOS.md
        echo "- **动态仓位管理**: 底仓+加仓+补仓+T+0策略" >> dist/README-macOS.md
        echo "- **完整风控体系**: 止盈、止损、时间、紧急四重保护" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "## 🔧 使用说明" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "1. 在左侧输入6位股票代码（如：000001）" >> dist/README-macOS.md
        echo "2. 选择分析周期" >> dist/README-macOS.md
        echo "3. 可选择设置持仓信息进行个性化分析" >> dist/README-macOS.md
        echo "4. 点击"开始分析"查看完整报告" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "## ⚠️ 注意事项" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "1. **首次启动**: 可能需要较长时间，请耐心等待" >> dist/README-macOS.md
        echo "2. **网络连接**: 需要网络连接获取股票数据" >> dist/README-macOS.md
        echo "3. **防火墙**: 部分防火墙可能阻止应用启动，请添加信任" >> dist/README-macOS.md
        echo "4. **端口占用**: 如果8501端口被占用，应用会自动寻找其他可用端口" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "## 🛠️ 故障排除" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "### 启动失败" >> dist/README-macOS.md
        echo "- 检查是否有足够的磁盘空间（至少100MB）" >> dist/README-macOS.md
        echo "- 尝试以管理员权限运行" >> dist/README-macOS.md
        echo "- 临时关闭杀毒软件" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "### 浏览器未打开" >> dist/README-macOS.md
        echo "- 手动打开浏览器访问控制台显示的地址" >> dist/README-macOS.md
        echo "- 通常为: http://localhost:8501" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "### 数据获取失败" >> dist/README-macOS.md
        echo "- 检查网络连接" >> dist/README-macOS.md
        echo "- 确认股票代码格式正确（6位数字）" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "## 📞 技术支持" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "如遇问题请检查：" >> dist/README-macOS.md
        echo "1. 系统兼容性" >> dist/README-macOS.md
        echo "2. 网络连接状态" >> dist/README-macOS.md
        echo "3. 防火墙设置" >> dist/README-macOS.md
        echo "4. 磁盘空间" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "---" >> dist/README-macOS.md
        echo "" >> dist/README-macOS.md
        echo "**免责声明**: 本工具仅供学习研究使用，不构成投资建议。投资有风险，决策需谨慎。" >> dist/README-macOS.md
    
    - name: Create zip package (Windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        cd dist
        powershell Compress-Archive -Path * -DestinationPath ../BandMasterPro-Windows.zip
        cd ..
    
    - name: Create zip package (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        cd dist
        zip -r ../BandMasterPro-macOS.zip *
        cd ..
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: BandMasterPro-${{ matrix.os }}
        path: |
          dist/
          BandMasterPro-${{ matrix.os == 'windows-latest' && 'Windows' || 'macOS' }}.zip
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/BandMasterPro-windows-latest/BandMasterPro-Windows.zip
          artifacts/BandMasterPro-macos-latest/BandMasterPro-macOS.zip
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          ## 🎉 BandMaster Pro 跨平台发布
          
          本次发布包含以下平台的完整安装包：
          
          - **Windows**: BandMasterPro-Windows.zip
          - **macOS**: BandMasterPro-macOS.zip
          
          ### 📦 使用说明
          
          1. 下载对应平台的zip压缩包
          2. 解压到任意目录
          3. 运行启动脚本或直接运行可执行文件
          4. 等待应用启动，浏览器会自动打开
          
          ### 🔧 系统要求
          
          - Windows 10/11 (x64)
          - macOS 10.14+ (Intel/Apple Silicon)
          
          ### ⚠️ 注意事项
          
          - 首次启动可能需要10-30秒
          - 需要网络连接获取股票数据
          - 建议关闭杀毒软件或添加信任
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 